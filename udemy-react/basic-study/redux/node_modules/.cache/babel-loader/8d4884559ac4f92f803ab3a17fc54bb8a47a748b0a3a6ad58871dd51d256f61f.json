{"ast":null,"code":"import { createStore } from 'redux';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === 'increment') {\n    // *** 리덕스뿐만 아니라 상태를 변경할 때는 절대 원본 상태 객체를 직접 수정하면 안된다.\n    // 상태의 불변성을 유지하기 위해, 항상 새로운 객체를 생성하여 반환해야 한다.\n    // 이를 통해 상태 변경을 감지할 수 있고, 리렌더링을 최적화할 수 있다.\n    // 아래 코드처럼 기존 상태의 복사본을 만들고 필요한 부분만 변경한 후, 새로운 객체를 반환.\n    return {\n      ...state,\n      // 기존 상태 객체의 모든 속성을 복사\n      counter: state.counter + 1 // counter 속성만 업데이트\n    };\n  }\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'toggle') {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n  return state;\n};\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["createStore","initialState","counter","showCounter","counterReducer","state","action","type","amount","store"],"sources":["/Users/donghanoh/Documents/react-study/udemy-react/basic-study/redux/src/store/index.js"],"sourcesContent":["import { createStore } from 'redux';\n\nconst initialState = { counter: 0, showCounter: true };\n\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === 'increment') {\n    // *** 리덕스뿐만 아니라 상태를 변경할 때는 절대 원본 상태 객체를 직접 수정하면 안된다.\n    // 상태의 불변성을 유지하기 위해, 항상 새로운 객체를 생성하여 반환해야 한다.\n    // 이를 통해 상태 변경을 감지할 수 있고, 리렌더링을 최적화할 수 있다.\n    // 아래 코드처럼 기존 상태의 복사본을 만들고 필요한 부분만 변경한 후, 새로운 객체를 반환.\n    return {\n      ...state, // 기존 상태 객체의 모든 속성을 복사\n      counter: state.counter + 1, // counter 속성만 업데이트\n    };\n  }\n\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === 'toggle') {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter,\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AAEnC,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAEtD,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAGJ,YAAY,EAAEK,MAAM,KAAK;EACvD,IAAIA,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC/B;IACA;IACA;IACA;IACA,OAAO;MACL,GAAGF,KAAK;MAAE;MACVH,OAAO,EAAEG,KAAK,CAACH,OAAO,GAAG,CAAC,CAAE;IAC9B,CAAC;EACH;EAEA,IAAII,MAAM,CAACC,IAAI,KAAK,UAAU,EAAE;IAC9B,OAAO;MACLL,OAAO,EAAEG,KAAK,CAACH,OAAO,GAAGI,MAAM,CAACE,MAAM;MACtCL,WAAW,EAAEE,KAAK,CAACF;IACrB,CAAC;EACH;EAEA,IAAIG,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACLL,OAAO,EAAEG,KAAK,CAACH,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEE,KAAK,CAACF;IACrB,CAAC;EACH;EAEA,IAAIG,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAO;MACLJ,WAAW,EAAE,CAACE,KAAK,CAACF,WAAW;MAC/BD,OAAO,EAAEG,KAAK,CAACH;IACjB,CAAC;EACH;EAEA,OAAOG,KAAK;AACd,CAAC;AAED,MAAMI,KAAK,GAAGT,WAAW,CAACI,cAAc,CAAC;AAEzC,eAAeK,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}